<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>記事の作成</title>
    <link rel="stylesheet" href="/public/css/xamplepage.css">
</head>
<body>
    <div class="page-header"><%- include('partials/header.ejs') %></div>
    <main>
        <div class="form-container">

            <ul class="tab-nav">
                <li class="tab" data-tab="list" onclick="switchToList()">投稿記事を見る</li>
                <li class="tab active" data-tab="create-form" onclick="switchToCreateForm()">記事を作成する</li>
            </ul>

            <div class="tab-content">
                <div id="food-list" class="tab-panel">
                    <h3>投稿記事を見る（Not implemented）</h3>
                    <ul id="food-items">
                        <!-- List of added food items will be populated here -->
                    </ul>
                </div>

                <form id="create-form" action="/food/create" method="POST" class="tab-panel active">
                    <input type="hidden" name="username" value="test">
                    <div class="form-layout">
                        <div class="form-left">
                            <label for="name">料理の名前</label>
                            <input type="text" id="name" name="name" required>

                            <label for="description">説明</label>
                            <textarea id="description" name="description" required></textarea>

                            <label for="ingredients">材料</label>
                            <textarea id="ingredients" name="ingredients" required></textarea>

                            <label for="recipe">作り方</label>
                            <textarea id="recipe" name="recipe" required></textarea>

                            <label for="locations">おすすめの店</label>
                            <input type="text" id="locations" name="locations" required>

                            <!-- TODO: Food Tag Input -->
                            <!-- Render notification to show that request is OK -->
                        </div>
                        <div class="form-right">
                            <label for="image">画像挿入</label>
                            <input type="file" id="image" name="image" accept="image/*" onchange="handleImageUpload(event)" required style="display: none;" required>
                            <input type="hidden" id="image_base64" name="image_base64" required>
                            <img id="imagePreview" src="/public/img/blank.png" alt="Food Item Preview" style="width: 200px; height: 200px; cursor: pointer;" onclick="document.getElementById('image').click();">
                            <button type="submit">投稿</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </main>
<script>
    function handleImageUpload(event) {
        const file = event.target.files[0];
        const reader = new FileReader();
        reader.onloadend = function() {
            document.getElementById('image_base64').value = reader.result;
            const imagePreview = document.getElementById('imagePreview');
            imagePreview.src = reader.result;
            imagePreview.style.display = 'block';
        }
        if (file) {
            reader.readAsDataURL(file);
        }
    }

    function switchToCreateForm() {
        const createFormPanel = document.getElementById('create-form');
        const foodListPanel = document.getElementById('food-list');

        foodListPanel.classList.remove('active');
        createFormPanel.classList.add('active');
        // (Optional) Clear any previously displayed food items from the list
        // document.getElementById('food-items').innerHTML = ''; // Clear the list
    }

    function switchToList() {
        const createFormPanel = document.getElementById('create-form');
        const foodListPanel = document.getElementById('food-list');

        createFormPanel.classList.remove('active');
        foodListPanel.classList.add('active');

        // Implement logic to fetch and populate the list of added food items
        // This could involve making an API call to your server or using existing data
        // fetchFoodList(); // Example function call to fetch data (not implemented here)
    }

</script>
<style>
.tab-nav {
    list-style: none;
    padding: 0;
    display: flex;
    cursor: pointer;
    margin-bottom: 20px;
}

.tab {
    flex: 1; /* Make each tab take equal space */
    padding: 10px 0; /* Vertical padding */
    background-color: #f1f1f1;
    border: 1px solid #ccc;
    border-bottom: none;
    text-align: center; /* Center the text */
}

.tab.active {
    background-color: white;
    font-weight: bold;
    border-top: 2px solid #4CAF50; /* Highlight active tab */
}

.tab-content {
    border: 1px solid #ccc;
    padding: 20px;
    background-color: white;
}

.tab-panel {
    display: none; /* Hide all tab panels by default */
}

.tab-panel.active {
    display: block; /* Show active tab panel */
}

#imagePreview {
    border: 1px solid #ccc; /* Optional: Add a border around the image */
    border-radius: 4px; /* Optional: Add rounded corners */
    margin-top: 10px; /* Space between the input and the image */
}
</style>
</body>
</html>